name: Release Android apk and aab

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for the release'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}

    steps:
#      - name: Checkout
#        uses: actions/checkout@v3.5.2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3.11.0
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build APK and AAB with Gradle
#        run: ./gradlew assembleRelease bundleRelease
#
#      - name: Create keystore file
#        run: |
#          echo ${{ secrets.KEYSTORE_FILE }} | base64 -d > keystore.jks
#
#      - name: Sign APK
#        run: |
#          jarsigner -keystore keystore.jks \
#          -storepass ${{ secrets.STORE_PASSWORD }} \
#          -keypass ${{ secrets.KEY_PASSWORD }} \
#          -signedjar app/build/outputs/apk/release/app-release-signed.apk \
#          app/build/outputs/apk/release/app-release-unsigned.apk ${{ secrets.KEY_ALIAS }}
#
#      - name: Sign AAB
#        run: |
#          jarsigner -keystore keystore.jks \
#          -storepass ${{ secrets.STORE_PASSWORD }} \
#          -keypass ${{ secrets.KEY_PASSWORD }} \
#          -signedjar app/build/outputs/bundle/release/app-release-signed.aab \
#          app/build/outputs/bundle/release/app-release.aab ${{ secrets.KEY_ALIAS }}
#
#      - name: Rename APK and AAB
#        run: |
#          mv app/build/outputs/apk/release/app-release-signed.apk app/build/outputs/apk/release/app-release-${VERSION}.apk
#          mv app/build/outputs/bundle/release/app-release-signed.aab app/build/outputs/bundle/release/app-release-${VERSION}.aab

      - name: Configure AWS CLI
        run: |
          # Configure the AWS CLI with your credentials
          aws --version
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ vars.AWS_REGION }}
#
#      - name: Publish apk and aab to S3
#        run: |
#          # upload apk file to the S3 bucket
#          aws s3 cp app/build/outputs/apk/release/app-release-${VERSION}.apk \
#          s3://${{ vars.AWS_BUCKET_NAME }}/android/apk/releases/${VERSION}/app-release-${VERSION}.apk \
#          aws s3 cp  app/build/outputs/bundle/release/app-release-${VERSION}.aab \
#          s3://${{ vars.AWS_BUCKET_NAME }}/android/aab/releases/${VERSION}/app-release-${VERSION}.aab
#
#
#      - name: Update Version
#        run: |
#          TAG_NAME=v${VERSION}
#          ./gradlew setVersion -Pversion=$VERSION
#          git config --local user.email "action@github.com"
#          git config --local user.name "GitHub Action"
#          git commit -a -m "Update version in build.gradle to $VERSION"
#          git tag $TAG_NAME -m "Version $VERSION"
#          git push origin $TAG_NAME
#
#      - name: Upload artefacts
#        uses: actions/upload-artifact@v3.1.2
#        with:
#          name: outputs
#          path: app/build/outputs/